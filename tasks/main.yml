---
- name: Validate required variables
  ansible.builtin.assert:
    that:
      - morpheus_token is string and morpheus_token != '' and morpheus_token is defined
      - morpheus_url is string and morpheus_url != '' and morpheus_url is defined
      - morpheus_url | regex_search('^https?://[a-zA-Z0-9.\-\/\:]{1,}')
      - morpheus_tenant_name is string and morpheus_tenant_name != '' and morpheus_tenant_name is defined
      - update_morpheus_cypher in [ "yes", "no"]
      - morpheus_cypher_ipa_domain_name is string and morpheus_cypher_ipa_domain_name is defined and morpheus_cypher_ipa_domain_name!= ''
    fail_msg: "Input validation failed. See README.md for information on required inputs and their format."
    success_msg: "User input configuration is valid."

- name: Validate optional variables
  ansible.builtin.assert:
    that:
      - morpheus_cypher_ipa_server_hostname is string and morpheus_cypher_ipa_server_hostname is defined and morpheus_cypher_ipa_server_hostname != ''
      - morpheus_cypher_ipa_admin_username is string and morpheus_cypher_ipa_admin_username is defined and morpheus_cypher_ipa_admin_username != ''
      - morpheus_cypher_ipa_admin_password is string and morpheus_cypher_ipa_admin_password is defined and morpheus_cypher_ipa_admin_password != ''
    fail_msg: "Input validation failed. See README.md for information on optional inputs and their format."
    success_msg: "User optional input configuration is valid."
  when: update_morpheus_cypher == "yes"

- name: Gather facts about the Morpheus Tenant
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/whoami"
    method: GET
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    validate_certs: false
  register: tenant_check

- name: Verify Morpheus Tenant exists
  ansible.builtin.set_fact:
    morpheus_tenant_id: "{{ tenant_check.json.user.account.id }}"
  when: tenant_check.json.user.account.name == morpheus_tenant_name
  failed_when: tenant_check.json.user.account.name != morpheus_tenant_name
  vars:
    error_msg: "Tenant '{{ morpheus_tenant_name }}' does not exist of wrong access token was passed."

- name: Store secrets in Morpheus Cypher (no expire date)
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/cypher/secret/{{ item.key }}?type=string&ttl=0"
    method: POST
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      value: "{{ item.value }}"
    validate_certs: false
  loop:
    - { key: "ipa_domain_name", value: "{{ morpheus_cypher_ipa_domain_name }}" }
    - { key: "ipa_server_hostname", value: "{{ morpheus_cypher_ipa_server_hostname }}" }
    - { key: "ipa_admin_username", value: "{{ morpheus_cypher_ipa_admin_username }}" }
    - { key: "ipa_admin_password", value: "{{ morpheus_cypher_ipa_admin_password }}" }
  register: store_morpheus_cypher_result
  when: update_morpheus_cypher == "yes"
  changed_when: true

- name: Check for existing Morpheus Integration with user-defined git repository
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/integrations?max=9999"
    method: GET
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    validate_certs: false
  register: morpheus_integration_check

- name: Set Morpheus Integration ID if exists
  ansible.builtin.set_fact:
    morpheus_integration_id: "{{ (morpheus_integration_check.json.integrations | selectattr('name', 'equalto', 'ewc-flavours') | first).id | default(None) }}"

- name: Create new Morpheus Integration for ewc-flavours GitHub repository
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/integrations"
    method: POST
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      integration:
        name: "ewc-flavours"
        type: ansible
        enabled: true
        serviceUrl: "https://github.com/ewcloud/ewc-flavours.git"
        config:
          defaultBranch: "main"
          ansiblePlaybooks: "/"
          ansibleRoles: "/roles"
          ansibleGroupVars: "/group_vars"
          ansibleHostVars: "/host_vars"
          ansibleCommandBus: true
    validate_certs: false
  register: create_morpheus_integration_result
  when: morpheus_integration_id == ''
  changed_when: true

- name: Update existing Morpheus Integration for ewc-flavours GitHub repository
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/integrations/{{ morpheus_integration_id }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      integration:
        name: "ewc-flavours"
        type: ansible
        enabled: true
        serviceUrl: "https://github.com/ewcloud/ewc-flavours.git"
        config:
          defaultBranch: "main"
          ansiblePlaybooks: "/"
          ansibleRoles: "/roles"
          ansibleGroupVars: "/group_vars"
          ansibleHostVars: "/host_vars"
          ansibleCommandBus: true
    validate_certs: false
  register: update_morpheus_integration_result
  when: morpheus_integration_id != ''
  changed_when: true

- name: Get ID of Morpheus Integration
  ansible.builtin.set_fact:
    morpheus_integration_id: "{{ create_morpheus_integration_result.json.integration.id if morpheus_integration_id == '' else update_morpheus_integration_result.json.integration.id }}"

- name: Check for existing Morpheus Tasks
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/tasks?max=9999"
    method: GET
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    validate_certs: false
  register: morpheus_task_check

- name: Set Morpheus Task ID if exists (to be ran during provision)
  ansible.builtin.set_fact:
    morpheus_task_id_provision: "{{ (morpheus_task_check.json.tasks | selectattr('name', 'equalto', 'ipa-client-enroll') | first).id | default(None) }}"

- name: Create new Morpheus Task (to be ran during provision)
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/tasks"
    method: POST
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      task:
        name: "ipa-client-enroll"
        visibility: "private"
        taskType:
          code: "ansibleTask"
        executeTarget: "resource"
        taskOptions:
          ansibleGitId: "{{ morpheus_integration_id }}"
          ansiblePlaybook: "ipa-client-enroll-flavour"
          ansibleGitRef: null
    validate_certs: false
  register: create_morpheus_task_result_provision
  when: morpheus_task_id_provision == ''
  changed_when: true

- name: Update existing Morpheus Task (to be ran during provision)
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/tasks/{{ morpheus_task_id_provision }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      task:
        name: "ipa-client-enroll"
        visibility: "private"
        taskType:
          code: "ansibleTask"
        executeTarget: "resource"
        taskOptions:
          ansibleGitId: "{{ morpheus_integration_id }}"
          ansiblePlaybook: "ipa-client-enroll-flavour"
          ansibleGitRef: null
    validate_certs: false
  register: update_morpheus_task_result_provision
  when: morpheus_task_id_provision != ''
  changed_when: true

- name: Get ID of Morpheus Task (to be ran during provision)
  ansible.builtin.set_fact:
    morpheus_task_id_provision: "{{ create_morpheus_task_result_provision.json.task.id if morpheus_task_id_provision == '' else update_morpheus_task_result_provision.json.task.id }}"

- name: Set Morpheus Task ID if exists (to be ran during teardown)
  ansible.builtin.set_fact:
    morpheus_task_id_teardown: "{{ (morpheus_task_check.json.tasks | selectattr('name', 'equalto', 'ipa-client-disenroll') | first).id | default(None) }}"

- name: Create new Morpheus Task (to be ran during teardown)
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/tasks"
    method: POST
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      task:
        name: "ipa-client-disenroll"
        visibility: "private"
        taskType:
          code: "ansibleTask"
        executeTarget: "resource"
        taskOptions:
          ansibleGitId: "{{ morpheus_integration_id }}"
          ansiblePlaybook: ipa-client-disenroll-flavour
          ansibleGitRef: null
    validate_certs: false
  register: create_morpheus_task_result_teardown
  when: morpheus_task_id_teardown == ''
  changed_when: true

- name: Update existing Morpheus Task (to be ran during teardown)
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/tasks/{{ morpheus_task_id_teardown }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      task:
        name: "ipa-client-disenroll"
        visibility: "private"
        taskType:
          code: "ansibleTask"
        executeTarget: "resource"
        taskOptions:
          ansibleGitId: "{{ morpheus_integration_id }}"
          ansiblePlaybook: "ipa-client-disenroll-flavour"
          ansibleGitRef: null
    validate_certs: false
  register: update_morpheus_task_result_teardown
  when: morpheus_task_id_teardown != ''
  changed_when: true

- name: Get ID of Morpheus Task (to be ran during teardown)
  ansible.builtin.set_fact:
    morpheus_task_id_teardown: "{{ create_morpheus_task_result_teardown.json.task.id if morpheus_task_id_teardown == '' else update_morpheus_task_result_teardown.json.task.id }}"

- name: Check for existing Morpheus Workflow
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/task-sets?max=9999"
    method: GET
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    validate_certs: false
  register: morpheus_workflow_check

- name: Set Morpheus Workflow ID if exists
  ansible.builtin.set_fact:
    morpheus_workflow_id: "{{ (morpheus_workflow_check.json.taskSets | selectattr('name', 'equalto', 'ipa-enroll-automation') | first).id | default(None) }}"

- name: Create new Morpheus Workflow
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/task-sets"
    method: POST
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      taskSet:
        name: "ipa-enroll-automation"
        visibility: "private"
        type: "provision"
        tasks:
          - taskId: "{{ morpheus_task_id_provision }}"
            taskPhase: "provision"
          - taskId: "{{ morpheus_task_id_teardown }}"
            taskPhase: "teardown"
    validate_certs: false
  register: create_morpheus_workflow_result
  changed_when: true
  when: morpheus_workflow_id == ''

- name: Update existing Morpheus Workflow
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/task-sets/{{ morpheus_workflow_id }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      taskSet:
        name: "ipa-enroll-automation"
        visibility: "private"
        type: "provision"
        tasks:
          - taskId: "{{ morpheus_task_id_provision }}"
            taskPhase: "provision"
    validate_certs: false
  register: update_morpheus_workflow_result
  changed_when: true
  when: morpheus_workflow_id != ''

- name: Get ID of Morpheus Workflow
  ansible.builtin.set_fact:
    morpheus_workflow_id: "{{ create_morpheus_workflow_result.json.taskSet.id if morpheus_workflow_id == '' else update_morpheus_workflow_result.json.taskSet.id }}"

- name: Gather facts about the Morpheus Domain
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/networks/domains?max=9999"
    method: GET
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    validate_certs: false
  register: morpheus_domain_check

- name: Set Morpheus Domain ID if exists
  ansible.builtin.set_fact:
    morpheus_domain_id: "{{ (morpheus_domain_check.json.networkDomains | selectattr('name', 'equalto', morpheus_cypher_ipa_domain_name_name) | first).id | default(None) }}"

- name: Create new Morpheus Domain
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/networks/domains"
    method: POST
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      networkDomain:
        name: "{{ morpheus_cypher_ipa_domain_name_name }}"
        active: true
        domainController: false
        taskSetId: "{{ morpheus_workflow_id }}"
    validate_certs: false
  register: create_morpheus_domain_result
  changed_when: true
  when: morpheus_domain_id == ''

- name: Update existing Morpheus Domain
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/networks/domains/{{ morpheus_domain_id }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      networkDomain:
        name: "{{ morpheus_cypher_ipa_domain_name_name }}"
        active: true
        domainController: false
        taskSetId: "{{ morpheus_workflow_id }}"
    validate_certs: false
  register: update_morpheus_domain_result
  changed_when: true
  when: morpheus_domain_id != ''

- name: Get ID of Morpheus Domain ID
  ansible.builtin.set_fact:
    morpheus_domain_id: "{{ create_morpheus_domain_result.json.networkDomain.id if morpheus_domain_id == '' else update_morpheus_domain_result.json.networkDomain.id }}"

- name: Link Morpheus Workflow to Morpheus Domain
  ansible.builtin.uri:
    url: "{{ morpheus_url }}/api/networks/domains/{{ morpheus_domain_id }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ morpheus_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      networkDomain:
        taskSetId: "{{ morpheus_workflow_id }}"
    validate_certs: false
  register: update_morpheus_domain_result
  changed_when: true

- name: List created and/or updated Morpheus entities
  ansible.builtin.debug:
    msg:
      - "Morpheus Tenant: {'name': '{{ morpheus_tenant_name }}',  'id': '{{ morpheus_tenant_id }}'}"
      - "Morpheus Git Integration: {'name': 'ewc-flavours', 'id':'{{ morpheus_integration_id }}'}"
      - "Morpheus Tasks: [{'name': 'ipa-client-enroll', 'id': '{{ morpheus_task_id_provision }}'}, {'name': 'ipa-client-disenroll', 'id': '{{ morpheus_task_id_teardown }}'}]"
      - "Morpheus Workflow: {'name': 'ipa-enroll-automation' 'id': '{{ morpheus_workflow_id }}'}"
      - "Morpheus Domain: {'name': '{{ morpheus_cypher_ipa_domain_name_name }}', 'id': '{{ morpheus_domain_id }}'}"
      - "{{ 'Morpheus Cypher Secrets:                                                                               ' if update_morpheus_cypher == 'yes' else None }}"
      - "{{ (store_morpheus_cypher_result.results | map(attribute='json') | flatten | map(attribute='cypher') | list) if update_morpheus_cypher == 'yes' else None }}"
